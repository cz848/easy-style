//load exbase var exbase
@import "var";

//page width
@mixin es-container($page-width : $es-container-width){
  width:$page-width;
  margin:0 auto;
}

//float, fix IE6 bug
@mixin es-float($position : left,$hack : IE6){
  @if $position == none {
    float:none;
  }
  @else if $hack == IE6{
    float:unquote($position);
    _display:inline;
  }
  @else if $hack == IE7{
    float:unquote($position);
    *display:inline;
  }
}

//clear, @include es-clear(fix);
@mixin es-clear($way : both){
  @if $way == fix{
    *zoom:1;
    display:block;
    &:after {
      content: "\0020";
      display: block;
      height: 0;
      clear: both;
      visibility: hidden;
      overflow:hidden;
    }
  }
  @if $way == dom{
    clear:both;
    line-height:0;
    font-size:0;
    height:0;
  }
  @if $way == both{
    clear:both;
  }
}
//cross browser inline-block
@mixin es-inline-block(){
 display:inline-block;
 display:-moz-inline-stack;
 *display:inline; zoom:1;
}

//CSS3 Utilities
@mixin es-cross-browser($property, $value, $official: true, $moz: $es-support-for-mozilla, $webkit: $es-support-for-webkit, $o: $es-support-for-opera, $ms: $es-support-for-microsoft, $khtml: $es-support-for-khtml) {
  @if $official {
    #{$property}: $value; }
  @if $moz and $es-support-for-mozilla {
    -moz-#{$property}: $value; }
  @if $webkit and $es-support-for-webkit {
    -webkit-#{$property}: $value; }
  @if $o and $es-support-for-opera {
    -o-#{$property}: $value; }
  @if $ms and $es-support-for-microsoft {
    -ms-#{$property}: $value; }
  @if $khtml and $es-support-for-khtml {
    -khtml-#{$property}: $value; }
}

//CSS3 border radius. es-border-radius(5px) ,es-border-radius(5px 6px ,5px 4px)
@mixin es-border-radius($radius: $default-border-radius, $vertical-radius: false){
  @if $vertical-radius {
    @include es-cross-browser(border-radius, first-value-of($radius) first-value-of($vertical-radius), not -moz, -webkit, not -o, not -ms, not -khtml, not official);
    @include es-cross-browser("border-radius", $radius unquote("/") $vertical-radius, -moz, not -webkit, -o, -ms, -khtml, official);
  }
  @else {
    @include es-cross-browser(border-radius, $radius);
  }
}

//CSS3 box shadow. es-border-radius(5px) ,es-border-radius(5px 6px ,5px 4px)
@mixin es-box-shadow($shadow-1: default, $shadow-2: false, $shadow-3: false, $shadow-4: false, $shadow-5: false, $shadow-6: false, $shadow-7: false, $shadow-8: false, $shadow-9: false, $shadow-10: false) {
  // This has to be on a single line due to a bug in the scss parser: https://github.com/nex3/sass/issues/issue/26
  $legacy: type-of($shadow-1) == color and type-of(if($shadow-2, $shadow-2, 0)) == number and type-of(if($shadow-3, $shadow-3, 0)) == number and type-of(if($shadow-4, $shadow-4, 0)) == number and type-of(if($shadow-5, $shadow-5, 0)) == number and ($shadow-6 == inset or type-of($shadow-6) == bool) and ($shadow-2 or $shadow-3 or $shadow-4 or $shadow-5 or $shadow-6);
  @if $legacy {
    @warn "Passing separate arguments for a single shadow to box-shadow is deprecated. " + "Pass the values as a single space-separated list, or use the single-box-shadow mixin. " + "See http://beta.compass-style.org/help/tutorials/upgrading/antares/ for more info.";
    @include es-single-box-shadow(if($shadow-1, $shadow-1, $default-box-shadow-color), if($shadow-2, $shadow-2, $default-box-shadow-h-offset), if($shadow-3, $shadow-3, $default-box-shadow-v-offset), if($shadow-4, $shadow-4, $default-box-shadow-blur), if($shadow-5, $shadow-5, $default-box-shadow-spread), if($shadow-6, $shadow-6, $default-box-shadow-inset)); }
  @else {
    @if $shadow-1 == default {
      $shadow-1: -compass-space-list(compact(if($default-box-shadow-inset, inset, false), $default-box-shadow-h-offset, $default-box-shadow-v-offset, $default-box-shadow-blur, $default-box-shadow-spread, $default-box-shadow-color)); }
    $shadow: compact($shadow-1, $shadow-2, $shadow-3, $shadow-4, $shadow-5, $shadow-6, $shadow-7, $shadow-8, $shadow-9, $shadow-10);
    @include es-cross-browser(box-shadow, $shadow, -moz, -webkit, -o, not -ms, not -khtml, official); }
  }

@mixin es-background-image($image-1, $image-2: false, $image-3: false, $image-4: false, $image-5: false, $image-6: false, $image-7: false, $image-8: false, $image-9: false, $image-10: false) {
  $images: compact($image-1, $image-2, $image-3, $image-4, $image-5, $image-6, $image-7, $image-8, $image-9, $image-10);
  $add-pie-bg: prefixed(-pie, $images) or -compass-list-size($images) > 1;
  @if $es-support-for-svg and prefixed(-svg, $images) {
    background-image: -svg($images);
    background-size: 100%; }
  @if $es-support-for-original-webkit-gradients and prefixed(-owg, $images) {
    background-image: -owg($images); }
  @if $es-support-for-webkit and prefixed(-webkit, $images) {
    background-image: -webkit($images); }
  @if $es-support-for-mozilla and prefixed(-moz, $images) {
    background-image: -moz($images); }
  @if $es-support-for-opera and prefixed(-o, $images) {
    background-image: -o($images); }
  @if $es-support-for-microsoft and prefixed(-ms, $images) {
    background-image: -ms($images); }
  @if $es-support-for-pie and $add-pie-bg {
    @warn "PIE does not support background-image. Use @include background(#{$images}) instead."; }
  background-image: $images; }

@mixin es-linear-gradient($color-stops, $start: false, $image: false) {
  @if $image {
    @if $start {
      @warn "The linear-gradient mixin is deprecated. Instead use: @include background-image(#{$image}, linear-gradient(#{$start}, #{$color-stops}))";
    }
    @else {
      @warn "The linear-gradient mixin is deprecated. Instead use: @include background-image(#{$image}, linear-gradient(#{$color-stops}))";
    }
  } @else {
    @if $start {
      @warn "The linear-gradient mixin is deprecated. Instead use: @include background-image(linear-gradient(#{$start}, #{$color-stops}))";
    } @else {
      @warn "The linear-gradient mixin is deprecated. Instead use: @include background-image(linear-gradient(#{$color-stops}))";
    }
  }
  @if not $start {
    $start: top;
  }
  @include es-background-image($image, linear-gradient($start, $color-stops));
}

//set opacity
@mixin es-opacity($value){
  filter:alpha(opacity=($value * 100));
  -moz-opacity:$value;
  -khtml-opacity:$value;
  opacity:$value;
}
//inline box

@mixin es-inline-box($class,$own : false){
/*<ul>
    <li class="list"></li>
    <li class="list"></li>
    <li class="list"></li>
</ul>
ul{
  @include es-inline-box(list);
}
.list{
  @include es-inline-box(list,true);
}
*/
  @if $own {
    @include es-float(left);
    @include es-clear(fix);
  }
  @else{
    .#{$class}{
      @include es-float(left);
    }
    @include es-clear(fix);
  }
}

//isometric (横向排列dom等距)
//@include es-isometric(500px,5);
@mixin es-isometric($width,$NO,$padding-top: 0px,$padding-right: 0px,$padding-bottom: 0px,$padding-left: 0px,$margin-top: 0px,$margin-right: 0px,$margin-bottom: 0px,$margin-left: 0px){
    width:$width / $NO - $padding-left - $padding-right - $margin-left - $margin-right;
    padding:$padding-top $padding-right $padding-bottom $padding-left;
    margin:$margin-top $margin-right $margin-bottom $margin-left;
}

//hr
@mixin es-hr($color,$width: 1px,$left-color : #FFFFFF,$right-color : #FFFFFF, $top-color : #FFFFFF){
  border-bottom:$width solid $color;
  border-left:1px solid $left-color;
  border-right:1px solid $right-color;
  border-top:1px solid $top-color;
  height:0px;
  font-size:0;
  line-height:0px;
}

//overflow
@mixin es-overflow($axis: all,$way: hidden){
  @if $axis == all{
    overflow:$way;
  }@else{
    overflow-#{$axis}:$way;
  }
}

//height = line-height
@mixin es-height($height,$line-height:true,$hack-height:false,$hack-line-height:false,$type:'_'){
  @if $line-height != false and $line-height != true{
    height:$height;
    line-height:$line-height;
    @if $hack-height{
      #{$type}height:$hack-height;
    }
    @if $hack-line-height{
      #{$type}line-height:$hack-line-height;
    }
  }@else if $line-height == true{
    height:$height;
    line-height:$height;
  }@else if $line-height == false{
    height:$height;
  }
}

@mixin es-background($value){
  @if type_of($value) == color{
    background-color:unquote($value);
  }@else{
    background:unquote($value);
  }
}

@mixin es-border($value){
  @if type_of($value) == color{
    border-color: unquote($value);
  }@else{
    border:unquote($value);
  }
}

@mixin es-font($value){
  @if type_of($value) == color{
    color: unquote($value);
  }@else{
    font: unquote($value);
  }
}
// box
@mixin es-box($width,$height : false){
  @if $height != false{
    width:$width;
    height:$height;
  } @else{
    width:$width;
    height:$width;
  }
}
//text overflow
@mixin text-overflow($width : 100%,$height : false,$line-height : true){
  width:$width;
  @if $height != false{
    @include es-height($height,$line-height);
  }
  overflow:hidden;
  text-overflow:ellipsis;
  white-space:nowrap;
}
